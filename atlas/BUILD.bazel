load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_file")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

sh_binary(
    name = "apply",
    srcs = [":apply_sh"],
    data = [
        "schema.hcl",
        ":atlas",
    ],
    env = {
        "ATLAS": "$(rootpath :atlas)",
        "SCHEMA": "$(rootpath schema.hcl)",
    },
)

write_file(
    name = "apply_sh",
    out = "apply.sh",
    content = ["$ATLAS schema apply --url $DSN --to \"file://$SCHEMA\" ${@:-}"],
    is_executable = True,
)

write_source_file(
    name = "inspect",
    diff_test = False,
    in_file = ":atlas_inspect_gen",
    out_file = "schema.hcl",
    tags = ["manual"],
)

genrule(
    name = "atlas_inspect_gen",
    outs = ["inspect_gen_schema.hcl"],
    cmd = "$(execpath :atlas) schema inspect --url $$DSN $${@:-} > $@",
    tags = ["manual"],
    tools = [":atlas"],
)

alias(
    name = "atlas",
    actual = select({
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": "@atlas_x86_64-unknown-linux//file",
        "@rules_rust//rust/platform:aarch64-apple-darwin": "@atlas_aarch64-apple-darwin//file",
        "//conditions:default": "@platforms//:incompatible",
    }),
)
